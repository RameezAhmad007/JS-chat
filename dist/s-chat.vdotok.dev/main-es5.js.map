{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.module.ts","webpack:///src/app/components/chat/add-group/add-group.component.ts","webpack:///src/app/components/chat/add-group/add-group.component.html","webpack:///src/app/components/chat/chat.component.ts","webpack:///src/app/components/chat/chat.component.html","webpack:///src/app/components/chat/new-chat/new-chat.component.ts","webpack:///src/app/components/chat/new-chat/new-chat.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/sign-up/sign-up.component.ts","webpack:///src/app/components/sign-up/sign-up.component.html","webpack:///src/app/shared/FormsHandler/FormsHandler.ts","webpack:///src/app/shared/FormsHandler/get-errors.component.ts","webpack:///src/app/shared/app-material/app-material.module.ts","webpack:///src/app/shared/auth/auth-guard.service.ts","webpack:///src/app/shared/auth/auth.service.ts","webpack:///src/app/shared/helpers/helpersFunctions.ts","webpack:///src/app/shared/pipe/filter.ts","webpack:///src/app/shared/pipe/safeurl.ts","webpack:///src/app/shared/services/base.service.ts","webpack:///src/app/shared/services/http.service.ts","webpack:///src/app/shared/services/pubsub.service.ts","webpack:///src/app/shared/services/storage.service.ts","webpack:///src/app/shared/services/websocket.service.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/validators.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","redirectTo","AppRoutingModule","forRoot","imports","AppComponent","selector","template","AppModule","maxOpened","preventDuplicates","declarations","providers","bootstrap","AddGroupComponent","pubsubService","svc","toastr","_fb","changeDetector","currentUserName","getAuthUsername","currentUserData","getUserData","changeEvent","loading","addGroupModel","AllUsers","activeChat","chatHistory","message","group_title","groupnameError","selectedUsers","CopyAllUsers","setActiveChat","form","group","required","maxLength","updateOn","document","addEventListener","event","addGroup","searchInput","nativeElement","pipe","target","value","data","sorting","search_field","search_value","condition","post","res","users","length","temparaay","filteruser","filter","user","searchValue","toLowerCase","full_name","startsWith","returnData","subscribe","error","setAlreadySelected","map","userIndex","find","alluser","user_id","detectChanges","contact","push","selected","Set","console","content","useridArray","participants","auto_created","v","status","emit","reset","validateForm","invalid","success","closemodel","forEach","element","backScreen","openDialog","templateUrl","styleUrls","ChatComponent","router","elRef","dialog","editGroupModel","AllGroups","threadType","fileToSend","isActiveThread","popupimagesrc","screen","sdkconnected","setToActive","groupForm","initConfigure","Client","on","response","getAllGroups","log","sendTextMessage","setOfflineStatus","setOnlineStatus","JSON","parse","stringify","trace","type","scroll","chatthread","findChatThread","to","messageBy","Date","pushMessage","readSingleMessage","setTimeout","sort","a","b","setUserTyping","receiptType","chName","topic","undefined","messageId","setOnlineStatusforSubscribe","messageInputElement","sendMessage","size","isGroupMessage","from","getTime","toString","key","channel_key","channel_name","date","playload","group_id","alert","get","groups","chat","r","chatTitle","indexchat","subscribeToChat","sortThread","preview","includes","split","channel","readsendMessage","chatobj","unreadchatHistory","isRead","readMessage","files","item","fileR","filetype","test","invalidSize","option","getFileType","SendFile","$event","onlineNumbers","who","n","username","ref_id","typinguser","nameList","userObj","join","i","j","querySelector","scrollTop","scrollHeight","Disconnect","clearLocalStorge","navigate","isShowName","messageByObj","previourmessage","thread","newResponse","foundIndex","findIndex","x","isactivethread","unReadCount","lastMessage","imagesrc","isMobile","window","innerWidth","logout","handleFileInput","NewChatComponent","subscribedata","addGroupEvent","LoginComponent","auth","formError","islogin","buildForm","onLogin","loginForm","minLength","saveData","project_id","login","setUserData","setAuthToken","auth_token","setAuthUsername","SignUpComponent","usernameValidator","navigator","platform","emailValidator","signup","FormsHandler","valid","controls","field","control","markAsTouched","onlySelf","groupFiled","trim","GetErrorsComponent","errors","dirty","touched","Object","getMessage","params","errorMessages","requiredLength","requiredPattern","globalRippleConfig","disabled","AppMaterialModule","provide","useValue","entryComponents","AuthGuard","authService","isAuthenticated","AuthService","http","userSubject$","userSubject","getAuthToken","getToken","currentUserId","userRequest","userdata","_id","isEmptyObj","obj","hasOwnProperty","isEmptyArray","array","Array","isArray","isEmail","email","emailLowercase","match","FindObjectByValue","inputArray","FindArrayObject","AutoUnsubscribe","constructor","original","prototype","ngOnDestroy","prop","property","unsubscribe","apply","arguments","filterPipe","items","name","SafeUrlPipe","domSanitizer","url","bypassSecurityTrustResourceUrl","BaseService","userData","userData$","asObservable","isLoading","isLoadingResponse","URL","payload","HttpService","baseUrl","apiBaseUrl","next","getModifiedReq","handle","body","serRes","showErrorMsg","errorRes","clone","formdata","headers","set","errorResponse","PubsubService","wsSubscription","MVDOTOK","projectID","secret","host","messaging_server_map","protocol","port","Register","authorization_token","SendMessage","chanelObj","Subscribe","UnSubscribe","chatMessages","SendReceipt","StorageService","localStorage","clear","sessionStorage","getItem","STORAGE_KEY_AUTH_TOKEN","token","setItem","removeItem","STORAGE_KEY_USER_NAME","STORAGE_KEY_USER_DATA","WebsocketService","ready","webSocket","WebSocket","onopen","observer","onmessage","onerror","onclose","complete","close","PUBSUB","credentials","password","clientId","reConnectivity","components","SharedModule","hasBackdrop","useClass","multi","ValidationService","amount","validate","pattern","stripped","replace","isEmptyInputValue","tempstring","removeSpace","validEmail","validPhone","validUsername","uppercaseCharacterRule","crud","root","passworMismatch","parseFloat","parseInt","isNaN","whiteSpaceValidator","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ChatComponent } from './components/chat/chat.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\r\nimport { AuthGuard } from './shared/auth/auth-guard.service';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent\r\n  },\r\n  {\r\n    path: 'signup',\r\n    component: SignUpComponent\r\n  },\r\n  {\r\n    path: 'chat',\r\n    component: ChatComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  { path: '**', redirectTo: 'login' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  template: `<router-outlet></router-outlet>`\r\n})\r\nexport class AppComponent {\r\n  constructor() { }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ChatComponent } from './components/chat/chat.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AppMaterialModule } from './shared/app-material/app-material.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { AddGroupComponent } from './components/chat/add-group/add-group.component';\r\nimport { NewChatComponent } from './components/chat/new-chat/new-chat.component';\r\nimport { ToastrModule } from 'ngx-toastr';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ChatComponent,\r\n    AddGroupComponent,\r\n    LoginComponent,\r\n    NewChatComponent,\r\n    SignUpComponent\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    ReactiveFormsModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    CommonModule,\r\n    BrowserAnimationsModule,\r\n    AppMaterialModule,\r\n    HttpClientModule,\r\n    ToastrModule.forRoot({\r\n      maxOpened: 1,\r\n      preventDuplicates: true\r\n    })\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { ChangeDetectorRef, Component, ElementRef, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport FormsHandler from 'src/app/shared/FormsHandler/FormsHandler';\r\nimport { BaseService } from 'src/app/shared/services/base.service';\r\nimport { PubsubService } from 'src/app/shared/services/pubsub.service';\r\nimport { StorageService } from 'src/app/shared/services/storage.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { fromEvent } from 'rxjs/internal/observable/fromEvent';\r\nimport { map } from 'rxjs/internal/operators/map';\r\nimport { debounceTime } from 'rxjs/internal/operators/debounceTime';\r\nimport { distinctUntilChanged } from 'rxjs/internal/operators/distinctUntilChanged';\r\nimport { mergeMap } from 'rxjs/internal/operators/mergeMap';\r\nimport { startWith } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'add-group',\r\n  templateUrl: './add-group.component.html',\r\n  styleUrls: ['./add-group.component.scss']\r\n})\r\nexport class AddGroupComponent implements OnInit {\r\n  currentUserName = StorageService.getAuthUsername();\r\n  currentUserData = StorageService.getUserData();\r\n  @Output() changeEvent = new EventEmitter<string>();\r\n  form: FormGroup;\r\n  loading = true;\r\n  addGroupModel = false;\r\n  AllUsers = [];\r\n  activeChat: any = {\r\n    chatHistory: []\r\n  };\r\n  message: string = '';\r\n  group_title = '';\r\n  groupnameError = '';\r\n  dialogRef;\r\n  selectedUsers = [];\r\n  CopyAllUsers = [];\r\n  @ViewChild('searchInput') searchInput: ElementRef;\r\n  @Output() setActiveChat = new EventEmitter<string>();\r\n\r\n  constructor(\r\n    public pubsubService: PubsubService,\r\n    private svc: BaseService,\r\n    private toastr: ToastrService,\r\n    private _fb: FormBuilder,\r\n    private changeDetector: ChangeDetectorRef,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this._fb.group({\r\n      'group_title': new FormControl('', [Validators.required, Validators.maxLength(100)]),\r\n    }, { updateOn: 'change' });\r\n\r\n    document.addEventListener(\"keyup\", event => {\r\n      if (event.code === 'Enter' && !this.loading) {\r\n        this.addGroup();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.searchInput) {\r\n      fromEvent(this.searchInput.nativeElement, 'input')\r\n        .pipe(\r\n          map((event: Event) => (event.target as HTMLInputElement).value),\r\n          debounceTime(1000),\r\n          distinctUntilChanged(),\r\n          startWith(''),\r\n          mergeMap(value => {\r\n            this.loading = true;\r\n            if (!value) {\r\n              const data = {\r\n                sorting: \"ORDER BY full_name ASC\",\r\n                search_field: \"full_name\",\r\n                search_value: '',\r\n                condition: \"contains\",\r\n              }\r\n              return this.svc.post('AllUsers', data).pipe(map(res => {\r\n                if(!(res.users && res.users.length))\r\n                {\r\n                  res.users = [];\r\n                }\r\n                this.CopyAllUsers = [...res.users];\r\n                return res;\r\n              }))\r\n            }\r\n            const temparaay = [...this.CopyAllUsers];\r\n            const filteruser = temparaay.filter(user => {\r\n              let searchValue = value.toLowerCase();\r\n              if (user.full_name.toLowerCase().startsWith(searchValue)) { return -1; }\r\n            });\r\n            const returnData = {\r\n              users: filteruser\r\n            }\r\n            return of(returnData)\r\n          }),\r\n        )\r\n        .subscribe(res => {\r\n          this.loading = false;\r\n          if (!res.users || !res.users.length) {\r\n            this.toastr.error(\"Opps!\", \"No contacts found\");\r\n            this.AllUsers = [];\r\n          } else {\r\n            this.AllUsers = res.users;\r\n          }\r\n          this.setAlreadySelected();\r\n        })\r\n    }\r\n  }\r\n\r\n  setAlreadySelected() {\r\n    this.selectedUsers.map(user => {\r\n      const userIndex = this.AllUsers.find(alluser => alluser.user_id == user.user_id);\r\n      if (userIndex) userIndex['selected'] = true;\r\n    });\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n  selectContact(contact) {\r\n    this.groupnameError = '';\r\n    contact['selected'] = !contact['selected'];\r\n    this.changeDetector.detectChanges();\r\n    this.selectedUsers.push(contact);\r\n    this.selectedUsers = this.selectedUsers.filter(user => user.selected);\r\n    this.selectedUsers = [...new Set(this.selectedUsers)];\r\n    if (!this.selectedUsers.length) {\r\n      this.groupnameError = 'Please Select Contacts';\r\n    } else if (this.selectedUsers.length > 4) {\r\n      this.groupnameError = 'Participants cannot be more than 4';\r\n    }\r\n    console.error('groupnameError', this.groupnameError);\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n  openDialog(content): void {\r\n    this.groupnameError = '';\r\n    this.selectedUsers = this.selectedUsers.filter(user => user.selected);\r\n    this.changeDetector.detectChanges();\r\n    if (!this.selectedUsers.length) {\r\n      this.groupnameError = 'Please Select Contacts';\r\n      return;\r\n    } else if (this.selectedUsers.length > 4) {\r\n      this.groupnameError = 'Participants cannot be more than 4';\r\n      return;\r\n    }\r\n    if (this.selectedUsers.length == 1) {\r\n      const useridArray = this.selectedUsers.map(user => user.user_id);\r\n      let data = {\r\n        participants: useridArray,\r\n        auto_created: useridArray.length > 1 ? 0 : 1,\r\n        group_title: \"One to One chat\",\r\n      }\r\n      this.svc.post('CreateGroup', data).subscribe(v => {\r\n        this.changeDetector.detectChanges();\r\n        if (v && v.status == 200) {\r\n          this.groupnameError = '';\r\n          this.setActiveChat.emit(v.group);\r\n          this.form.reset();\r\n        }\r\n        this.selectedUsers = [];\r\n        this.changeDetector.detectChanges();\r\n        this.loading = false;\r\n        this.changeEvent.emit(\"THREAD\");\r\n      });\r\n\r\n    } else {\r\n      this.addGroupModel = true;\r\n    }\r\n  }\r\n\r\n  addGroup() {\r\n    FormsHandler.validateForm(this.form);\r\n    const useridArray = this.selectedUsers.map(user => user.user_id);\r\n    if (this.form.invalid || !useridArray.length || this.loading) return;\r\n    if (useridArray.length > 5) {\r\n      this.toastr.error('OPPS!', 'participants Can not be more than 5!');\r\n      return;\r\n    }\r\n    this.loading = true;\r\n    this.changeDetector.detectChanges();\r\n    let data = {\r\n      participants: useridArray,\r\n      auto_created: useridArray.length > 1 ? 0 : 1\r\n    }\r\n    data = {\r\n      ...data,\r\n      ...this.form.value\r\n    };\r\n    this.svc.post('CreateGroup', data).subscribe(v => {\r\n      this.changeDetector.detectChanges();\r\n      if (v && v.status == 200) {\r\n        this.groupnameError = '';\r\n        this.setActiveChat.emit(v.group);\r\n        this.toastr.success('Success!', 'The group has been created!');\r\n        this.closemodel();\r\n        this.form.reset();\r\n      }\r\n      this.selectedUsers = [];\r\n      this.changeDetector.detectChanges();\r\n      this.loading = false;\r\n    });\r\n  }\r\n\r\n  closemodel() {\r\n    this.selectedUsers = [];\r\n    this.addGroupModel = false;\r\n    this.AllUsers.forEach(element => element['selected'] = false);\r\n    this.changeEvent.emit(\"THREAD\");\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n  backScreen() {\r\n    this.changeEvent.emit(\"CHAT\");\r\n  }\r\n\r\n}\r\n","<div class=\"newChatContainer\">\r\n  <div class=\"newChatHeader\">\r\n    <div class=\"newChatLeft hand\">\r\n      <img src=\"./assets/images/arrow-left.png\" class=\"arrowLeft hand\" (click)=\"backScreen()\" />\r\n      <p class=\"newChatHeading\">Create Group Chat</p>\r\n    </div>\r\n    <div class=\"newChatRight hand\" (click)=\"openDialog(content)\">\r\n      <img class=\"goodMark\" src=\"./assets/images/checkmark.png\" />\r\n    </div>\r\n  </div>\r\n  <div class=\"newChatSearchBox\">\r\n    <div class=\"input-group\">\r\n      <div class=\"input-group-prepend\">\r\n        <img src=\"./assets/images/search.png\" class=\"seacrchIcon\" />\r\n      </div>\r\n      <input type=\"text\" class=\"form-control\" placeholder=\"Search\" #searchInput />\r\n    </div>\r\n  </div>\r\n  <div class=\"newGrpChat\">\r\n    <p [ngClass]=\"groupnameError ? 'text-danger' :'cntct'\">\r\n      {{groupnameError ? groupnameError :'Select Contacts'}}\r\n    </p>\r\n  </div>\r\n  <div class=\"newListContainer max-height\">\r\n    <ng-container *ngFor=\"let user of AllUsers\">\r\n      <div class=\"contactListCard hand\" (click)=\"selectContact(user)\">\r\n        <div class=\"contactListCardLeft\">\r\n          <img src=\"./assets/images/user.png\" class=\"ListCardIcon\" />\r\n          <p class=\"ListCardName text-capitalize pb-1\">{{user.full_name}}</p>\r\n        </div>\r\n        <div class=\"selectuser contactListCardRight\" *ngIf=\"user['selected']\">\r\n          <img src=\"./assets/images/checkmark-circle.png\" class=\"ListCardButton\" />\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n</div>\r\n\r\n<div id=\"myModal\" class=\"modal\" *ngIf=\"addGroupModel\">\r\n  <div class=\"createChatPopup\">\r\n    <div class=\"chatPopupContent groupPopup\">\r\n      <div class=\"modalHeader\">\r\n        <p class=\"modalHeading\">Create a group chat</p>\r\n        <img src=\"./assets/images/cross.png\" class=\"modalCross hand\" (click)=\"closemodel()\" />\r\n      </div>\r\n      <div class=\"modalContent\">\r\n        <form [formGroup]=\"form\" class=\"w-100\" (submit)=\"addGroup()\">\r\n          <p class=\"modalContentHeading\">Name your group chat</p>\r\n          <input type=\"text\" class=\"form-control\" placeholder=\"ex: Deeper team\" formControlName=\"group_title\" />\r\n          <form-errors [control]=\"form.get('group_title')\"></form-errors>\r\n        </form>\r\n      </div>\r\n      <button type=\"submit\" class=\"btn doneButton mt-3\" (click)=\"addGroup()\" [disabled]=\"loading\">\r\n        DONE\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #content let-modal>\r\n  <div class=\"createChatPopup\">\r\n    <div class=\"chatPopupContent\">\r\n      <div class=\"modalHeader\">\r\n        <p class=\"modalHeading\">Create a group chat</p>\r\n        <img src=\"./assets/images/cross.png\" class=\"modalCross hand\" (click)=\"modal.dismiss('Cross click')\" />\r\n      </div>\r\n      <div class=\"modalContent\">\r\n        <form [formGroup]=\"form\" class=\"w-100\" (submit)=\"addGroup()\">\r\n          <p class=\"modalContentHeading\">Name your group chat</p>\r\n          <input type=\"text\" class=\"form-control\" placeholder=\"ex: Deeper team\" formControlName=\"group_title\" />\r\n          <form-errors [control]=\"form.get('group_title')\"></form-errors>\r\n        </form>\r\n      </div>\r\n      <button type=\"submit\" class=\"btn doneButton mt-3\" (click)=\"addGroup()\" [disabled]=\"loading\">\r\n        DONE\r\n      </button>\r\n    </div>\r\n  </div>\r\n</ng-template>","import { ChangeDetectorRef, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { fromEvent } from 'rxjs/internal/observable/fromEvent';\r\nimport { debounceTime } from 'rxjs/internal/operators/debounceTime';\r\nimport { distinctUntilChanged } from 'rxjs/internal/operators/distinctUntilChanged';\r\nimport { map } from 'rxjs/internal/operators/map';\r\nimport { FindArrayObject } from 'src/app/shared/helpers/helpersFunctions';\r\nimport { BaseService } from 'src/app/shared/services/base.service';\r\nimport { PubsubService } from 'src/app/shared/services/pubsub.service';\r\nimport { StorageService } from 'src/app/shared/services/storage.service';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport FormsHandler from 'src/app/shared/FormsHandler/FormsHandler';\r\nimport { MessageModel, onlineOfflineModel, receiptModel, typingModel } from 'src/app/shared/models/chat';\r\n\r\n@Component({\r\n  selector: 'chat',\r\n  templateUrl: './chat.component.html',\r\n  styleUrls: ['./chat.component.scss']\r\n})\r\nexport class ChatComponent implements OnInit {\r\n  editGroupModel = false;\r\n  groupForm: FormGroup;\r\n  loading = true;\r\n  AllGroups = [];\r\n  activeChat: any = {\r\n    chatHistory: []\r\n  };\r\n  message: string = '';\r\n  currentUserName = StorageService.getAuthUsername();\r\n  currentUserData = StorageService.getUserData();\r\n  @ViewChild('messageInputElement') messageInputElement: ElementRef;\r\n  threadType = 'THREAD';\r\n  fileToSend: File = null;\r\n  isActiveThread = false;\r\n  popupimagesrc = '';\r\n  screen = 'CHAT';\r\n  sdkconnected = false;\r\n  setToActive = null;\r\n  constructor(\r\n    public pubsubService: PubsubService,\r\n    private svc: BaseService,\r\n    private router: Router,\r\n    private elRef: ElementRef,\r\n    public dialog: MatDialog,\r\n    private toastr: ToastrService,\r\n    private changeDetector: ChangeDetectorRef,\r\n    private _fb: FormBuilder\r\n  ) {\r\n    this.groupForm = this._fb.group({\r\n      'group_id': new FormControl('', [Validators.required]),\r\n      'group_title': new FormControl('', [Validators.required, Validators.maxLength(100)]),\r\n    }, { updateOn: 'change' });\r\n    this.pubsubService.initConfigure();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.pubsubService.Client.on(\"connect\", response => {\r\n      console.error(\"connect\", response);\r\n      this.sdkconnected = true;\r\n      if (!this.AllGroups.length) {\r\n        this.getAllGroups();\r\n      }\r\n    });\r\n\r\n    this.pubsubService.Client.on(\"disconnect\", (response) => {\r\n      console.log(\"disconnect\", response);\r\n      this.sdkconnected = false;\r\n    });\r\n\r\n    document.addEventListener(\"keyup\", event => {\r\n      if (event.code === 'Enter') {\r\n        this.sendTextMessage();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.pubsubService.Client.on(\"authentication_error\", (res: any) => {\r\n      console.log(\"authentication_error\", res);\r\n    });\r\n\r\n\r\n    this.pubsubService.Client.on(\"offline\", response => {\r\n      console.log(\"offline\", response);\r\n      this.setOfflineStatus(response);\r\n    });\r\n\r\n    this.pubsubService.Client.on(\"online\", (response: onlineOfflineModel) => {\r\n      console.log(\"online\", response);\r\n      this.setOnlineStatus(response);\r\n    });\r\n\r\n    this.pubsubService.Client.on(\"message\", response => {\r\n      response = JSON.parse(JSON.stringify(response));\r\n      console.trace(\"new message\", response);\r\n      if (response.type == 'text' || response.type == 'file' || response.type == 'image' || response.type == 'audio' || response.type == 'video') {\r\n        this.scroll();\r\n        const chatthread = this.findChatThread(response.to);\r\n        const isActiveThread = chatthread.id == this.activeChat.id;\r\n        chatthread['unReadCount'] = isActiveThread ? 0 : (chatthread['unReadCount'] || 0) + 1;\r\n        response = this.messageBy(chatthread, response);\r\n        response['isRead'] = isActiveThread;\r\n        response['auto_created'] = chatthread['auto_created'];\r\n        chatthread['lastMessage'] = response.content;\r\n        chatthread['time'] = new Date(response.id);\r\n        chatthread['type'] = response.type;\r\n        this.pushMessage(chatthread, response);\r\n        this.readSingleMessage(response, isActiveThread);\r\n        setTimeout(() => {\r\n          this.AllGroups.sort((a, b) => {\r\n            return a.id == chatthread.id ? -1 : 1;\r\n          });\r\n        }, 500);\r\n        this.changeDetector.detectChanges();\r\n      } else if (response.type == 'typing') {\r\n        this.setUserTyping(response);\r\n      } else if (response.receiptType == 3) {\r\n        let chName = response.topic || response.to;\r\n        if (response.to != undefined)\r\n          chName = response.to;\r\n        const chatthread = this.findChatThread(chName);\r\n        let message = FindArrayObject(chatthread.chatHistory, 'id', response.messageId);\r\n        if (message) {\r\n          message['readCount'] = (message['readCount'] || 0) + 1\r\n        }\r\n        this.changeDetector.detectChanges();\r\n      }\r\n    });\r\n\r\n    this.pubsubService.Client.on(\"subscribed\", response => {\r\n      console.log(\"subscribed\", response);\r\n      this.setOnlineStatusforSubscribe(response);\r\n    });\r\n\r\n    if (this.messageInputElement) {\r\n      fromEvent(this.messageInputElement.nativeElement, 'input')\r\n        .pipe(\r\n          map((event: Event) => (event.target as HTMLInputElement).value),\r\n          debounceTime(3000),\r\n          distinctUntilChanged()\r\n        ).subscribe(data => {\r\n          const sendMessage: MessageModel = {\r\n            status: 0,\r\n            size: 0,\r\n            type: \"typing\",\r\n            isGroupMessage: false,\r\n            from: StorageService.getAuthUsername(),\r\n            content: '0',\r\n            id: new Date().getTime().toString(),\r\n            key: this.activeChat.channel_key,\r\n            to: this.activeChat.channel_name,\r\n            date: new Date().getTime(),\r\n          }\r\n          this.pubsubService.sendMessage(sendMessage);\r\n        });\r\n    }\r\n  }\r\n\r\n  deleteGroup(group) {\r\n    this.loading = true;\r\n    const playload = {\r\n      group_id: group.id\r\n    }\r\n    this.svc.post('DeleteGroup', playload).subscribe(v => {\r\n      this.changeDetector.detectChanges();\r\n      if (v && v.status == 200) {\r\n        this.loading = false;\r\n        this.getAllGroups();\r\n        this.toastr.success('The group has been deleted!', 'Success!');\r\n      } else {\r\n        console.error(v.message);\r\n        alert(v.message);\r\n        this.changeDetector.detectChanges();\r\n      }\r\n    });\r\n  }\r\n\r\n  openModal(group) {\r\n    if (group.auto_created) {\r\n      alert('Can not change One to one group title');\r\n      return;\r\n    }\r\n    group['group_id'] = group.id\r\n    this.groupForm.reset(group);\r\n    this.editGroupModel = true;\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n  editGroup() {\r\n    FormsHandler.validateForm(this.groupForm);\r\n    console.error(\"this.groupForm.\", this.groupForm.invalid);\r\n    if (this.groupForm.invalid || this.loading) return;\r\n    const playload = this.groupForm.value;\r\n    this.loading = true;\r\n    this.svc.post('RenameGroup', playload).subscribe(v => {\r\n      if (v && v.status == 200) {\r\n        this.getAllGroups();\r\n        this.editGroupModel = false;\r\n        this.loading = false;\r\n        this.toastr.success('The group has been updated!', 'Success!');\r\n      }\r\n    });\r\n  }\r\n\r\n  getAllGroups() {\r\n    this.loading = true;\r\n    this.svc.get('AllGroups').subscribe(v => {\r\n      this.loading = false;\r\n      if (v && v.status == 200) {\r\n        this.AllGroups = v.groups.map(chat => {\r\n          if (chat['participants'].length) {\r\n            chat['participants'] = chat['participants'].map(r => {\r\n              r['username'] = r['username'] || r['full_name'];\r\n              return r;\r\n            });\r\n          }\r\n          chat['chatTitle'] = chat.auto_created ? chat['participants'][0]['full_name'] : chat.group_title;\r\n          chat['Online'] = false;\r\n          chat['key'] = chat.channel_key;\r\n          chat['channel'] = chat.channel_name;\r\n          chat['chatHistory'] = [];\r\n          chat['TotalParticipants'] = chat['participants'].length;\r\n          chat['onlineParticipants'] = 1;\r\n          chat['isSeen'] = true;\r\n          return chat;\r\n        });\r\n        console.error(\"this.activeChat.chatTitle\", this.activeChat);\r\n        if (!this.activeChat.chatTitle) {\r\n          this.activeChat = this.AllGroups.length ? this.AllGroups['0'] : {};\r\n        }\r\n        if (this.setToActive) {\r\n          const indexchat = this.AllGroups.find(group => group.id == this.setToActive)\r\n          this.activeChat = indexchat ? indexchat : this.AllGroups['0'];\r\n          this.setToActive = null;\r\n        }\r\n        this.isActiveThread = true;\r\n        this.pubsubService.subscribeToChat(this.AllGroups);\r\n      }\r\n      setTimeout(() => {\r\n        this.sortThread();\r\n      }, 500);\r\n      this.changeDetector.detectChanges();\r\n    });\r\n  }\r\n  checkFileType(content: any) {\r\n    let preview = content.includes('text/plain') ? ('./assets/images/txt.png') : content.includes('/pdf') ? ('./assets/images/pdf.png') : content.includes('/json') ? ('./assets/images/json.png') : 'https://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Icon-doc.svg/810px-Icon-doc.svg.png';\r\n    if (content.includes('video/'))\r\n      preview = './assets/images/video.png';\r\n    if (content.includes('audio/'))\r\n      preview = './assets/images/audio.png';\r\n    return preview;\r\n  }\r\n  fileType(content: any) {\r\n    return content.split(\";\")[0].split(\":\")[1]\r\n  }\r\n  findChatThread(channel) {\r\n    return FindArrayObject(this.AllGroups, 'channel_name', channel);\r\n  }\r\n\r\n  setActiveChat(group) {\r\n    this.isActiveThread = group.id == this.activeChat.id;\r\n    if (!this.isActiveThread) this.message = '';\r\n    this.activeChat = group;\r\n    group['unReadCount'] = 0;\r\n    this.screen = 'MSG';\r\n    this.scroll();\r\n    group.chatHistory = group.chatHistory || [];\r\n    this.readsendMessage(group.chatHistory);\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n  setchat(chat) {\r\n    this.setToActive = chat.id;\r\n  }\r\n\r\n  readSingleMessage(response, isActiveThread) {\r\n    if (response.from == this.currentUserName || !isActiveThread) return;\r\n    const chatobj: receiptModel = {\r\n      messageId: response.id,\r\n      receiptType: 3,\r\n      from: StorageService.getAuthUsername(),\r\n      key: response.key,\r\n      to: response.to,\r\n      date: new Date().getTime()\r\n    };\r\n    this.pubsubService.readSingleMessage(chatobj);\r\n  }\r\n\r\n  readsendMessage(chatHistory) {\r\n    const unreadchatHistory = chatHistory.filter(chat => !chat.isRead).map(chat => {\r\n      const chatobj: receiptModel = {\r\n        messageId: chat.id,\r\n        receiptType: 3,\r\n        from: StorageService.getAuthUsername(),\r\n        key: chat.key,\r\n        to: chat.to,\r\n        date: new Date().getTime()\r\n      };\r\n      return chatobj;\r\n    });\r\n    if (unreadchatHistory.length) this.pubsubService.readMessage(unreadchatHistory);\r\n    chatHistory = chatHistory.map(chat => {\r\n      chat.isRead = true;\r\n      return chat;\r\n    });\r\n  }\r\n\r\n  handleFileInput(files: FileList) {\r\n    this.fileToSend = files.item(0);\r\n  }\r\n\r\n  invalidSize() {\r\n    return ((this.fileToSend.size / 1024) > 6144);\r\n  }\r\n\r\n  removeAttachment() {\r\n    this.fileToSend = null;\r\n  }\r\n\r\n  getFileType(fileR) {\r\n    let type = \"file\";\r\n    const filetype = fileR.type;\r\n    if (filetype.includes('image')) type = \"image\";\r\n    else if (filetype.includes('audio')) type = \"audio\";\r\n    else if (filetype.includes('video')) type = \"video\";\r\n    return type;\r\n  }\r\n\r\n  sendTextMessage() {\r\n    if ((!(/\\S/.test(this.message))) && !this.fileToSend) {\r\n      return;\r\n    } else if (this.message.length > 400) {\r\n      this.toastr.error(\"Message can not be more than 400 characters\", \"Opps!\")\r\n      return;\r\n    } else if (this.fileToSend && this.invalidSize()) {\r\n      this.toastr.error(\"The maximum size of file should be 6MBs.\", \"Opps!\")\r\n      this.fileToSend = null;\r\n      return;\r\n    }\r\n    this.scroll();\r\n    if (!this.message && !this.fileToSend) return;\r\n    if (this.fileToSend) {\r\n      var option = {\r\n        id: new Date().getTime().toString(),\r\n        from: StorageService.getAuthUsername(),\r\n        topic: this.activeChat.channel_name,\r\n        to: this.activeChat.channel_name,\r\n        key: this.activeChat.channel_key,\r\n        type: this.getFileType(this.fileToSend),\r\n        date: new Date().getTime(),\r\n      };\r\n      this.pubsubService.Client.SendFile(this.fileToSend, option);\r\n      this.fileToSend = null;\r\n    }\r\n    if (!this.message) return;\r\n    const sendMessage: MessageModel = {\r\n      status: 1,\r\n      size: 0,\r\n      type: \"text\",\r\n      isGroupMessage: false,\r\n      from: StorageService.getAuthUsername(),\r\n      content: this.message,\r\n      id: new Date().getTime().toString(),\r\n      date: new Date().getTime(),\r\n      key: this.activeChat.channel_key,\r\n      to: this.activeChat.channel_name\r\n    }\r\n    this.pubsubService.sendMessage(sendMessage);\r\n    this.message = '';\r\n    this.scroll();\r\n    if (!(this.AllGroups.length && this.activeChat.id == this.AllGroups[0].id)) {\r\n      this.sortThread();\r\n    }\r\n  }\r\n\r\n  typingmessage($event) {\r\n    if ($event.key === \"Enter\") {\r\n      this.sendTextMessage();\r\n      return;\r\n    }\r\n    const sendMessage: MessageModel = {\r\n      status: 0,\r\n      size: 0,\r\n      type: \"typing\",\r\n      isGroupMessage: false,\r\n      from: StorageService.getAuthUsername(),\r\n      content: \"1\",\r\n      id: new Date().getTime().toString(),\r\n      key: this.activeChat.channel_key,\r\n      to: this.activeChat.channel_name,\r\n      date: new Date().getTime(),\r\n    }\r\n    this.pubsubService.sendMessage(sendMessage);\r\n  }\r\n\r\n  setOnlineStatusforSubscribe(response: onlineOfflineModel) {\r\n    const indexchat = this.findChatThread(response.channel);\r\n    if (indexchat) {\r\n      let onlineNumbers = [...new Set(response.who.map(n => n.username))]\r\n      indexchat['onlineParticipants'] = onlineNumbers && onlineNumbers.length || 1;\r\n      if (indexchat && indexchat.auto_created) indexchat['Online'] = onlineNumbers.length > 1\r\n    }\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n  setOnlineStatus(response: onlineOfflineModel) {\r\n    let indexchat = this.findChatThread(response.channel);\r\n    if (!indexchat) return;\r\n    if (indexchat.auto_created) indexchat['Online'] = true;\r\n    if (!indexchat.auto_created) {\r\n      indexchat['onlineParticipants'] = indexchat['onlineParticipants'] < indexchat['TotalParticipants'] ? indexchat['onlineParticipants'] + 1 : indexchat['onlineParticipants'];\r\n    }\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n  setOfflineStatus(response: onlineOfflineModel) {\r\n    const indexchat = this.findChatThread(response.channel);\r\n    if (indexchat && indexchat.auto_created) indexchat['Online'] = false;\r\n    if (!indexchat.auto_created) {\r\n      indexchat['onlineParticipants'] = indexchat['onlineParticipants'] > 2 ? indexchat['onlineParticipants'] - 1 : 1;\r\n    }\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n  setUserTyping(response: typingModel) {\r\n    if (response.from == this.currentUserData.ref_id) return;\r\n    let indexchat = FindArrayObject(this.AllGroups, 'channel_name', response.to);\r\n    let typinguser = indexchat[\"participants\"].find(e => e.ref_id == response.from);\r\n    if (response.content == '1') {\r\n      indexchat['TypingUserList'] = (indexchat['TypingUserList'] || []);\r\n      indexchat['TypingUserList'] = [...new Set([typinguser])];\r\n    } else if (response.content == '0') {\r\n      indexchat['TypingUserList'] = indexchat['TypingUserList'].filter(e => e.ref_id != response.from);\r\n    }\r\n    indexchat['userTyping'] = indexchat['TypingUserList'].length && response.content != '0';\r\n    let nameList = indexchat['TypingUserList'].map(userObj => userObj.full_name);\r\n    if (nameList.length == 1) {\r\n      indexchat['userTypingContent'] = nameList + ' ' + 'is typing...';\r\n    } else if (nameList.length == 2) {\r\n      indexchat['userTypingContent'] = nameList.join() + ' ' + 'are typing...';\r\n    } else if (nameList.length > 2) {\r\n      indexchat['userTypingContent'] = nameList.filter((i, j) => j < 2).join() + ' ' + 'and other are typing...';\r\n    }\r\n    // if (indexchat && indexchat.auto_created) {\r\n    //   indexchat['userTyping'] = response.content != '0' && response.from != this.currentUserData.ref_id;\r\n    //   indexchat['userTypingContent'] = (response.content == '1') ? sender + \" is typing...\" : \"\";\r\n    // } else if (indexchat && !indexchat.auto_created) {\r\n    //   this.setMultiUserTyping(response, typinguser, indexchat);\r\n    // }\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n  setMultiUserTyping(response, typinguser, indexchat) {\r\n    if (response.content == '1') {\r\n      indexchat['TypingUserList'] = [...new Set(typinguser)];\r\n    } else if (response.content == '0') {\r\n      indexchat['TypingUserList'] = indexchat['TypingUserList'].filter(e => e.ref_id != response.from);\r\n    }\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n  scroll(): void {\r\n    setTimeout(() => {\r\n      this.elRef.nativeElement.querySelector('.messagesBox').scrollTop = this.elRef.nativeElement.querySelector('.messagesBox').scrollHeight;\r\n    }, 500);\r\n  }\r\n\r\n  changeSidebar($event) {\r\n    this.threadType = $event;\r\n    if (this.threadType == 'THREAD') {\r\n      this.getAllGroups();\r\n    }\r\n  }\r\n\r\n  newChat() {\r\n    this.threadType = 'CHAT';\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n  logout() {\r\n    this.pubsubService.Disconnect();\r\n    StorageService.clearLocalStorge();\r\n    this.router.navigate(['login']);\r\n  }\r\n\r\n  sortThread() {\r\n    if (this.activeChat.id) {\r\n      this.AllGroups.sort((a, b) => {\r\n        return a.id == this.activeChat.id ? -1 : 1;\r\n      });\r\n    }\r\n  }\r\n\r\n  messageBy(chatthread, response) {\r\n    if (this.isShowName(chatthread, response)) {\r\n      const messageByObj = FindArrayObject(chatthread.participants, 'ref_id', response.from);\r\n      response['messageBy'] = messageByObj && messageByObj.full_name || '';\r\n    }\r\n    return response;\r\n  }\r\n\r\n  isShowName(chatthread, response) {\r\n    if (chatthread['chatHistory'].length && response.from) {\r\n      const previourmessage = chatthread['chatHistory'][chatthread['chatHistory'].length - 1];\r\n      return previourmessage.from != response.from;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  pushMessage(thread, response) {\r\n    let newResponse = {};\r\n    newResponse = JSON.parse(JSON.stringify(response));\r\n    if (response.type == 'text' || !response.content) {\r\n      thread['chatHistory'].push(newResponse);\r\n    } else {\r\n      var foundIndex = thread.chatHistory.findIndex(x => x.id == response.id);\r\n      thread.chatHistory[foundIndex] = response;\r\n    }\r\n  }\r\n\r\n  getLastMessage(group): string {\r\n    const isactivethread = group.id == this.activeChat.id;\r\n    if (!isactivethread && group.unReadCount) {\r\n      return \"Misread messages\"\r\n    } else if (group.type != 'text') {\r\n      return group.type;\r\n    }\r\n    return group.lastMessage;\r\n  }\r\n\r\n  openImage(imagesrc): void {\r\n    this.popupimagesrc = imagesrc;\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n  closeImage() {\r\n    this.popupimagesrc = null;\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n  closeModal() {\r\n    this.editGroupModel = false;\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n  isHideThread() {\r\n    return this.isMobile() ? this.screen != 'CHAT' : false;\r\n  }\r\n\r\n  isHideChatScreen() {\r\n    return this.isMobile() ? this.screen != 'MSG' : false;\r\n  }\r\n\r\n  backScreen() {\r\n    this.threadType = \"THREAD\";\r\n    this.screen = \"CHAT\";\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n  isMobile() {\r\n    return window.innerWidth < 768\r\n  }\r\n\r\n}","<div class=\"row dashboardContainer\">\r\n  <!-- popup end -->\r\n  <div class=\"col-sm-4 leftSide\" [hidden]=\"isHideThread()\">\r\n    <div class=\"leftSideHeader\">\r\n      <img src=\"./assets/images/logo2.png\" class=\"dashboardLogo\" />\r\n    </div>\r\n    <div class=\"leftSideListContainer\">\r\n\r\n      <ng-container *ngIf=\"threadType === 'THREAD'\">\r\n        <div style=\"align-items: center; margin:0px\" class=\"leftSectionHeader\">\r\n          <h4 class=\"leftHeading\">CHATROOMS</h4>\r\n          <h4 class=\"createText\" (click)=\"newChat()\">Create +</h4>\r\n        </div>\r\n        <!-- empty chats section start-->\r\n        <div class=\"leftSectionEmptyContainer\" *ngIf=\"!AllGroups.length && !loading\">\r\n          <p class=\"noAvailableText\">No Available ChatRoom</p>\r\n          <p class=\"tapText\">Tap and hold on any message to star it, so you can easily find it later.</p>\r\n        </div>\r\n        <!-- empty chats section end-->\r\n\r\n        <div class=\"listingContainer fullHeight\">\r\n          <div class=\"chatListContainer noHorizontalPadding\">\r\n            <ng-container *ngFor=\"let group of AllGroups\">\r\n              <div class=\"chatsCardContainer hand\" (click)=\"setActiveChat(group)\">\r\n                <div class=\"chatsCardLeft\" >\r\n                  <div class=\"chatsNameWrap\">\r\n                    <p class=\"chatName text-capitalize\">{{group.chatTitle}}</p>\r\n                    <span class=\"unreadBadge\" *ngIf=\"group.unReadCount\"> {{group.unReadCount}}</span>\r\n                  </div>\r\n                  <p class=\"misreadMsg\" *ngIf=\"group.userTyping\">{{group?.userTypingContent}}</p>\r\n\r\n                  <p class=\"misreadMsg text-capitalize\" *ngIf=\"!group.userTyping\"\r\n                    [ngClass]=\"group.unReadCount ? 'misreadMsg':'readMsg'\">\r\n                    {{ getLastMessage(group) }}\r\n                  </p>\r\n\r\n                </div>\r\n                <div class=\"chatsCardRight mr-1\">\r\n                  <div class=\"dropdown mt-1\" style=\"align-self: flex-end\">\r\n                    <img src=\"./assets/images/more.png\" class=\"moreIcon\" />\r\n                    <div class=\"dropdown-content\">\r\n                      <a class=\"edit\" (click)=\"openModal(group)\">EDIT GROUP NAME</a>\r\n                      <a class=\"delete\" (click)=\"deleteGroup(group)\">DELETE</a>\r\n                    </div>\r\n                  </div>\r\n                  <p [ngClass]=\"group.Online ? 'cardOnlineStatus' :'cardOfflineStatus'\" *ngIf=\"group.auto_created\">\r\n                    {{group.Online\r\n                    ?\r\n                    'Online' :'Offline'}}\r\n                  </p>\r\n                  <p class=\"cardOnlineStatus\" *ngIf=\"!group.auto_created\">\r\n                    {{ group.onlineParticipants + '/' + group.TotalParticipants }} Online\r\n\r\n                  </p>\r\n\r\n                </div>\r\n              </div>\r\n            </ng-container>\r\n          </div>\r\n        </div>\r\n\r\n      </ng-container>\r\n\r\n      <ng-container *ngIf=\"threadType === 'GROUP'\">\r\n        <add-group (setActiveChat)=\"setchat($event)\" (changeEvent)=\"changeSidebar($event)\"></add-group>\r\n      </ng-container>\r\n\r\n      <ng-container *ngIf=\"threadType === 'CHAT'\">\r\n        <new-chat (setActiveChat)=\"setchat($event)\" (changeEvent)=\"changeSidebar($event)\"></new-chat>\r\n      </ng-container>\r\n\r\n\r\n    </div>\r\n    <div class=\"leftSideFooter\">\r\n      <div class=\"logoutContainer\" (click)=\"logout()\">\r\n        <img src=\"./assets/images/log-out.png\" class=\"logoutLogo\" />\r\n        <span class=\"logoutText\">LOG OUT {{currentUserData.full_name}}</span>\r\n        <span class=\"ml-1\" [ngClass]=\"sdkconnected ? 'online' :'offline' \"></span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-sm-8 rightSide\" [hidden]=\"isHideChatScreen()\">\r\n    <div class=\"rightSideHeader alignBottom chatholder\">\r\n      <div style=\"display: flex;flex-direction: row;align-items: center\">\r\n        <img src=\"./assets/images/arrow-left.png\" class=\"arrowLeft hand\" (click)=\"backScreen()\" *ngIf=\"isMobile()\" />\r\n        <p class=\"roomNameText text-capitalize\" *ngIf=\"activeChat.chatTitle\">{{activeChat.chatTitle}}\r\n        </p>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- right side starts -->\r\n    <div class=\"messagesBox\">\r\n      <ng-container *ngIf=\"activeChat.chatTitle\">\r\n        <ng-container *ngFor=\"let chat of activeChat['chatHistory']\">\r\n          <div [ngClass]=\"chat.from == currentUserName ? 'senderChatContainer' :'receiverChatContainer'\">\r\n\r\n            <h4 class=\"msgBy text-capitalize\" *ngIf=\"chat.from != currentUserName\">{{chat.messageBy}}</h4>\r\n            <!-- first messgae from same person -->\r\n            <div class=\"bubbleContainer\">\r\n\r\n              <div class=\"bubble\" *ngIf=\"chat.type =='text'\">\r\n                <p class=\"msgText\">{{chat.content}}</p>\r\n              </div>\r\n\r\n              <div class=\"imgbubble\" *ngIf=\"chat.type =='image'\">\r\n                <mat-spinner [diameter]=\"30\" *ngIf=\"!chat.content\"></mat-spinner>\r\n                <img [src]=\"chat.content | safeUrl\" class=\"w-100 msgImage img-thumbnail img-fluid\"\r\n                  (click)=\"openImage(chat.content)\" />\r\n              </div>\r\n\r\n              <div class=\"imgbubble file-attachment\" *ngIf=\"chat.type !='text' && chat.type !='image'\">\r\n                <mat-spinner [diameter]=\"30\" *ngIf=\"!chat.content\"></mat-spinner>\r\n                <ng-container *ngIf=\"chat.content\">\r\n                  <img [src]=\"checkFileType(chat.content)\" class=\"w-100 msgImage thumbnail img-fluid\" />\r\n                  <a [href]=\"chat.content | safeUrl\" download>Download</a>\r\n                </ng-container>\r\n              </div>\r\n\r\n              <span class=\"time\">\r\n                <ng-container *ngIf=\"chat.readCount && chat.from == currentUserName\">\r\n                   Read\r\n                  <br />\r\n                </ng-container>\r\n                <span> {{chat.date | date:\"shortTime\"}} </span>\r\n              </span>\r\n            </div>\r\n\r\n          </div>\r\n        </ng-container>\r\n      </ng-container>\r\n\r\n      <div class=\"chatRoomContainer\" *ngIf=\"!activeChat.chatTitle && !loading\">\r\n        <div style=\"height: 100%;\" class=\"listingContainer\">\r\n          <!-- empty list container start -->\r\n          <div class=\"emptyListContainer\">\r\n            <div class=\"emptyListTop\">\r\n              <div></div>\r\n              <img src=\"./assets/images/shipping.png\" class=\"shippingIcon\" />\r\n              <div class=\"noConvoTextWrapper\">\r\n                <p class=\"noConvoText\">No Conversation Yet</p>\r\n                <p style=\"max-width: 200px;\" class=\"noConvoSub\">\r\n                  Tap and hold on any message to star it, so you can easily find\r\n                  it later.\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div class=\"emptyListBottom\">\r\n              <button type=\"submit\" class=\"btn newChatButton\" (click)=\"newChat()\">\r\n                NEW CHAT\r\n              </button>\r\n              <button type=\"submit\" class=\"btn refreshButton\" (click)=\"getAllGroups()\">\r\n                REFRESH\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <!-- empty list container end -->\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"sendInputContainer\" [hidden]=\"!activeChat.chatTitle\">\r\n      <div class=\"sendInputWrapper\">\r\n\r\n        <ng-container *ngIf=\"fileToSend\">\r\n          <div class=\"w-100\">\r\n            <img src=\"./assets/images/Document.png\" class=\"attachmentItemIcon ml-4\" />\r\n            <span class=\"ml-2\">{{fileToSend.name}}</span>\r\n            <span class=\"font-weight-bolder hand ml-2 text-danger\" (click)=\"removeAttachment()\">X</span>\r\n          </div>\r\n        </ng-container>\r\n\r\n        <input #messageInputElement type=\"text\" class=\"form-control\" placeholder=\"Type to reply..\"\r\n          (keyup)=\"typingmessage($event)\" [(ngModel)]=\"message\" *ngIf=\"!fileToSend\" />\r\n\r\n        <div class=\"sendInputButtonContainer dropup \" style=\"border-right: 1px solid #ebedf4\">\r\n          <img src=\"./assets/images/attachment.png\" data-toggle=\"dropdown\" class=\"sendIcon dropdown-toggle\" />\r\n          <div class=\"attachmentpopup dropdown-menu dropdown-menu-right selectOptionContainer\">\r\n            <div class=\"attachmentPopHeader mx-3\">\r\n              <p class=\"attachmentHeading\">ADD ATTACHMENT</p>\r\n              <p class=\"attachmentHeading\">X</p>\r\n            </div>\r\n            <div class=\"attachmentPopContent\" (click)=\"fileuploader.click()\">\r\n              <div class=\"attachmentTool\">\r\n                <div class=\"attachmentToolIcon\">\r\n                  <img src=\"./assets/images/Document.png\" class=\"attachmentItemIcon\" />\r\n                </div>\r\n                <input #fileuploader class=\"d-none\" type=\"file\" id=\"fileinput\"\r\n                  (change)=\"handleFileInput($event.target.files)\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"sendInputButtonContainer\" (click)=\"sendTextMessage()\">\r\n          <img src=\"./assets/images/send.png\" class=\"sendIcon\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n\r\n\r\n<!-- The Modal -->\r\n<div id=\"myModal\" class=\"modal\" *ngIf=\"popupimagesrc\">\r\n  <span class=\"close\" (click)=\"closeImage()\">&times;</span>\r\n  <img class=\"modal-content\" id=\"img01\" [src]=\"popupimagesrc | safeUrl\">\r\n</div>\r\n\r\n<div id=\"myModal\" class=\"modal\" *ngIf=\"editGroupModel\">\r\n  <div class=\"createChatPopup \">\r\n    <div class=\"chatPopupContent groupPopup\">\r\n      <div class=\"modalHeader\">\r\n        <p class=\"modalHeading\">Edit group </p>\r\n        <img src=\"./assets/images/cross.png\" class=\"modalCross hand\" (click)=\"closeModal()\" />\r\n      </div>\r\n      <div class=\" modalContent\">\r\n        <form [formGroup]=\"groupForm\" class=\"w-100\" (submit)=\"editGroup()\">\r\n          <p class=\"modalContentHeading\">Name your group </p>\r\n          <input type=\"text\" class=\"form-control\" placeholder=\"ex: Deeper team\" formControlName=\"group_title\" />\r\n          <form-errors [control]=\"groupForm.get('group_title')\"></form-errors>\r\n        </form>\r\n      </div>\r\n      <button type=\"submit\" class=\"btn doneButton mt-3\" (click)=\"editGroup()\" [disabled]=\"loading\">\r\n        DONE\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, ElementRef, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { fromEvent } from 'rxjs/internal/observable/fromEvent';\r\nimport { debounceTime } from 'rxjs/internal/operators/debounceTime';\r\nimport { distinctUntilChanged } from 'rxjs/internal/operators/distinctUntilChanged';\r\nimport { map } from 'rxjs/internal/operators/map';\r\nimport { mergeMap } from 'rxjs/internal/operators/mergeMap';\r\nimport { BaseService } from 'src/app/shared/services/base.service';\r\nimport { PubsubService } from 'src/app/shared/services/pubsub.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { startWith } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'new-chat',\r\n  templateUrl: './new-chat.component.html',\r\n  styleUrls: ['./new-chat.component.scss']\r\n})\r\nexport class NewChatComponent implements OnInit {\r\n  loading = true;\r\n  AllUsers = [];\r\n  CopyAllUsers = [];\r\n  @Output() changeEvent = new EventEmitter<string>();\r\n  @ViewChild('searchInput') searchInput: ElementRef;\r\n  @Output() setActiveChat = new EventEmitter<string>();\r\n\r\n\r\n  constructor(\r\n    public pubsubService: PubsubService,\r\n    private svc: BaseService,\r\n    public dialog: MatDialog,\r\n    private toastr: ToastrService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.searchInput) {\r\n      fromEvent(this.searchInput.nativeElement, 'input')\r\n        .pipe(\r\n          map((event: Event) => (event.target as HTMLInputElement).value),\r\n          debounceTime(1000),\r\n          distinctUntilChanged(),\r\n          startWith(''),\r\n          mergeMap(value => {\r\n            this.loading = true;\r\n            if (!value) {\r\n              const data = {\r\n                sorting: \"ORDER BY full_name ASC\",\r\n                search_field: \"full_name\",\r\n                search_value: '',\r\n                condition: \"contains\",\r\n              }\r\n              return this.svc.post('AllUsers', data).pipe(map(res => {\r\n                if(!(res.users && res.users.length))\r\n                {\r\n                  res.users = [];\r\n                }\r\n                this.CopyAllUsers = [...res.users];\r\n                return res;\r\n              }))\r\n            }\r\n            const temparaay = [...this.CopyAllUsers];\r\n            const filteruser = temparaay.filter(user => {\r\n              let searchValue = value.toLowerCase();\r\n              if (user.full_name.toLowerCase().startsWith(searchValue)) { return -1; }\r\n            });\r\n            const returnData = {\r\n              users: filteruser\r\n            }\r\n            return of(returnData)\r\n          })\r\n        )\r\n        .subscribe(res => {\r\n          this.loading = false;\r\n          if (!res.users || !res.users.length) {\r\n            this.toastr.error(\"No contacts found\", \"Opps!\");\r\n            this.AllUsers = [];\r\n          } else {\r\n            this.AllUsers = res.users;\r\n          }\r\n        })\r\n    }\r\n  }\r\n\r\n\r\n  backScreen() {\r\n    this.changeEvent.emit(\"THREAD\");\r\n  }\r\n\r\n  addGroupEvent() {\r\n    this.changeEvent.emit(\"GROUP\");\r\n  }\r\n\r\n  startChat(user) {\r\n    if (this.loading) return;\r\n    this.loading = true;\r\n    let data = {\r\n      group_title: user.full_name,\r\n      participants: [user.user_id],\r\n      auto_created: 1\r\n    }\r\n    this.svc.post('CreateGroup', data).subscribe(v => {\r\n      if (v && v.status == 200) {\r\n        let subscribedata = {\r\n          ...v.group,\r\n          key: v.group['channel_key'],\r\n          channel: v.group['channel_name'],\r\n        };\r\n        let data = [];\r\n        data.push(subscribedata)\r\n        this.pubsubService.subscribeToChat(data);\r\n        this.changeEvent.emit(\"THREAD\");\r\n        this.setActiveChat.emit(v.group);\r\n        this.loading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"newChatHeader\">\r\n  <div class=\"newChatLeft hand\">\r\n    <img src=\"./assets/images/arrow-left.png\" class=\"arrowLeft\" (click)=\"backScreen()\" />\r\n    <p class=\"newChatHeading\">New Chat</p>\r\n  </div>\r\n  <div class=\"newChatRight hand\">\r\n    <img class=\"goodMark\" src=\"./assets/images/checkmark.png\" />\r\n  </div>\r\n</div>\r\n<div class=\"newChatSearchBox\">\r\n  <div class=\"input-group\">\r\n    <div class=\"input-group-prepend\">\r\n      <img src=\"./assets/images/search.png\" class=\"seacrchIcon\" />\r\n    </div>\r\n    <input type=\"text\" class=\"form-control\" placeholder=\"Search\" #searchInput />\r\n  </div>\r\n</div>\r\n<div class=\"addGrpChat\">\r\n  <div class=\"addGrpChatTop hand\" (click)=\"addGroupEvent()\">\r\n    <img src=\"./assets/images/Group Chat.png\" class=\"addgrpIcon\" />\r\n    <p class=\"addGrpTitle\">Add Group Chat</p>\r\n  </div>\r\n  <div class=\"addGrpSep\"></div>\r\n  <!-- <div class=\"addGrpSub\"> -->\r\n  <p class=\"cntct\">Contacts</p>\r\n  <!-- </div> -->\r\n</div>\r\n<div class=\"contactListContainer max-height\">\r\n\r\n  <ng-container *ngFor=\"let user of AllUsers\">\r\n    <div class=\"contactListCard hand\" (click)=\"startChat(user)\">\r\n      <div class=\"contactListCardLeft\">\r\n        <img src=\"./assets/images/user.png\" class=\"ListCardIcon\" />\r\n        <p class=\"ListCardName text-capitalize pb-1\">{{user.full_name}}</p>\r\n      </div>\r\n      <div class=\"contactListCardRight justify-content-end pl-1\">\r\n        <img src=\"./assets/images/chat.png\" class=\" pl-1 ListCardButton hand\" />\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n\r\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from \"@angular/router\";\r\nimport { StorageService } from 'src/app/shared/services/storage.service';\r\nimport FormsHandler from '../../shared/FormsHandler/FormsHandler';\r\nimport { AuthService } from '../../shared/auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'ngx-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n\r\n  loginForm: FormGroup;\r\n  loading: boolean = false;\r\n  formError: string = '';\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private _fb: FormBuilder,\r\n    public auth: AuthService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    if (this.auth.islogin()) {\r\n      this.router.navigate(['chat']);\r\n    }\r\n    this.buildForm();\r\n    document.addEventListener(\"keyup\", event => {\r\n      if (event.code === 'Enter') {\r\n        this.onLogin();\r\n      }\r\n    });\r\n  }\r\n\r\n  buildForm() {\r\n    this.loginForm = this._fb.group({\r\n      'email': new FormControl('', [Validators.required, Validators.minLength(4), Validators.maxLength(50)]),\r\n      'password': new FormControl(null, [Validators.required, Validators.minLength(8), Validators.maxLength(14)])\r\n    }, { updateOn: 'change' });\r\n  }\r\n\r\n  onLogin() {\r\n    FormsHandler.validateForm(this.loginForm);\r\n    if (this.loginForm.invalid) return;\r\n    const saveData = this.loginForm.value;\r\n    saveData.project_id = '125YLEY1';\r\n    this.loading = true;\r\n    this.formError = null;\r\n    this.auth.login(saveData).subscribe(v => {\r\n      this.loading = false;\r\n      if (v && v.status == 200) {\r\n        StorageService.setUserData(v);\r\n        StorageService.setAuthToken(v.auth_token);\r\n        StorageService.setAuthUsername(v.ref_id);\r\n        this.router.navigate(['chat']);\r\n        this.loginForm.reset();\r\n      } else {\r\n        this.formError = v.message;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.loginForm.reset();\r\n  }\r\n\r\n}\r\n","<div class=\"containerWrapper\">\r\n  <img src=\"./assets/images/logo2.png\" class=\"logo\" />\r\n  <div class=\"innerWrapper\">\r\n    <h6 class=\"wrapperHeading\">Sign In</h6>\r\n    <p class=\"text-danger text-capitalize\">{{formError}}</p>\r\n    <div class=\"inputsContainer form-group\">\r\n      <form [formGroup]=\"loginForm\" class=\"w-100\" (submit)=\"onLogin()\">\r\n        <input type=\"email\" class=\"form-control\" placeholder=\"Email/Username\" formControlName=\"email\" />\r\n        <form-errors [control]=\"loginForm.get('username')\"></form-errors>\r\n        <input type=\"password\" class=\"form-control\" placeholder=\"Password\" formControlName=\"password\" />\r\n        <form-errors [control]=\"loginForm.get('password')\"></form-errors>\r\n      </form>\r\n    </div>\r\n    <div class=\"buttonsContainer\">\r\n      <button type=\"submit\" class=\"signButton\" (click)=\"onLogin()\" [disabled]=\"loading\">SIGN IN</button>\r\n      <h5 class=\"bottomLink\"><a routerLink=\"/signup\">SIGN UP</a></h5>\r\n      <p class=\"text-muted\">Version:2</p>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from \"@angular/router\";\r\nimport FormsHandler from '../../shared/FormsHandler/FormsHandler';\r\nimport { AuthService } from '../../shared/auth/auth.service';\r\nimport { ValidationService } from 'src/app/shared/validators';\r\nimport { StorageService } from 'src/app/shared/services/storage.service';\r\n\r\n@Component({\r\n  selector: 'sign-up',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.scss']\r\n})\r\nexport class SignUpComponent implements OnInit {\r\n\r\n  loginForm: FormGroup;\r\n  loading = false;\r\n  formError;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private _fb: FormBuilder,\r\n    public auth: AuthService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.buildForm();\r\n    document.addEventListener(\"keyup\", event => {\r\n      if (event.code === 'Enter') {\r\n        this.onLogin();\r\n      }\r\n    });\r\n  }\r\n\r\n  buildForm() {\r\n    this.loginForm = this._fb.group({\r\n      'full_name': new FormControl('', [Validators.required, ValidationService.usernameValidator, Validators.minLength(4), Validators.maxLength(50)]),\r\n      'device_type': new FormControl('web', [Validators.required]),\r\n      'device_model': new FormControl('web', [Validators.required]),\r\n      'device_os_ver': new FormControl(navigator.platform, [Validators.required]),\r\n      'email': new FormControl(null, [ValidationService.emailValidator, Validators.required]),\r\n      'password': new FormControl(null, [Validators.required])\r\n    }, { updateOn: 'change' });\r\n    console.log('this.signupForm', this.loginForm);\r\n  }\r\n\r\n  onLogin() {\r\n    FormsHandler.validateForm(this.loginForm);\r\n    if (this.loginForm.invalid) return;\r\n    const saveData = this.loginForm.value;\r\n    saveData.project_id = '125YLEY1';\r\n    this.loading = true;\r\n    this.formError = null;\r\n    this.auth.signup(saveData).subscribe(v => {\r\n      this.loading = false;\r\n      if (v && v.status == 200) {\r\n        StorageService.setUserData(v);\r\n        StorageService.setAuthToken(v.auth_token);\r\n        StorageService.setAuthUsername(v.ref_id);\r\n        this.router.navigate(['chat']);\r\n        this.loginForm.reset();\r\n      } else {\r\n        this.formError = v.message;\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"containerWrapper\">\r\n  <img src=\"./assets/images/logo2.png\" class=\"logo\" />\r\n  <div class=\"innerWrapper\">\r\n    <h6 class=\"wrapperHeading\">Sign Up to your account</h6>\r\n    <p class=\"text-danger text-capitalize\">{{formError }}</p>\r\n    <div class=\"inputsContainer form-group\">\r\n      <form [formGroup]=\"loginForm\" class=\"w-100\" (submit)=\"onLogin()\">\r\n        <input type=\"text\" class=\"form-control\" placeholder=\"Your Username\" formControlName=\"full_name\" />\r\n        <form-errors [control]=\"loginForm.get('full_name')\"></form-errors>\r\n        <input type=\"email\" class=\"form-control\" placeholder=\"Your Email\" formControlName=\"email\" />\r\n        <form-errors [control]=\"loginForm.get('email')\"></form-errors>\r\n        <input type=\"password\" class=\"form-control\" placeholder=\"Your Password\" formControlName=\"password\" />\r\n        <form-errors [control]=\"loginForm.get('password')\"></form-errors>\r\n      </form>\r\n    </div>\r\n    <div class=\"buttonsContainer\">\r\n      <button type=\"submit\" class=\"signButton\" (click)=\"onLogin()\" [disabled]=\"loading\"> SIGN\r\n        UP</button>\r\n      <h5 class=\"bottomLink\"><a routerLink=\"/login\">SIGN IN</a></h5>\r\n    </div>\r\n  </div>\r\n</div>","import { FormGroup } from \"@angular/forms\";\r\n\r\nexport default class FormsHandler {\r\n\r\n    /**\r\n     * This method is use to validate Form\r\n     * @param formErrors string \r\n     * @param form  form instance | object\r\n     * @return errors as string\r\n     * @author  Mukhtiar Hussain <muhammad.mukhtiar@norgic.com>\r\n     **/\r\n    static validateForm(form) {\r\n        if (form.valid) {\r\n            return true;\r\n        } else {\r\n            if (form.controls) {\r\n                for (const field in form.controls) {\r\n                    const control = form.get(field);\r\n                    if (control.invalid) {\r\n                        control.markAsTouched({ onlySelf: true });\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n    * this method is use to validate Form Array\r\n    * @param formErrors string \r\n    * @param form  form instance | object\r\n    * @return errors as string\r\n    * @author  Mukhtiar Hussain <muhammad.mukhtiar@norgic.com>\r\n    **/\r\n    static validateFormArray(form) {\r\n        if (form.valid) {\r\n            return true;\r\n        } else {\r\n            if (form.controls) {\r\n                for (const group in form.controls) {\r\n                    const groupFiled = form.get(group) as FormGroup;\r\n                    for (const field in groupFiled.controls) {\r\n                        const control = groupFiled.get(field);\r\n                        if (control.invalid) {\r\n                            control.markAsTouched({ onlySelf: true });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n\r\n    static deleteEmptyFileds(data) {\r\n        if (data) {\r\n            for (const key in data) {\r\n                if (data[key] == '' || data[key] == null) {\r\n                    delete data[key];\r\n                }\r\n                if (data[key] && typeof data[key] === 'string') {\r\n                    data[key] = data[key].trim();\r\n                }\r\n            }\r\n            return data;\r\n        }\r\n    }\r\n\r\n}","import { Component, Input } from '@angular/core';\r\nimport { AbstractControlDirective, AbstractControl } from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'form-errors',\r\n    template: `\r\n    <p class='text-danger'>\r\n     {{hasErrors() ? listOfErrors() : ''}}\r\n    </p>`,\r\n})\r\nexport class GetErrorsComponent {\r\n\r\n    private static readonly errorMessages = {\r\n        'required': () => 'The specified information is required.',\r\n        'minlength': (params) => 'The min number of characters is ' + params.requiredLength,\r\n        'maxlength': (params) => 'The max allowed number of characters is ' + params.requiredLength,\r\n        'pattern': (params) => 'The required pattern is: ' + params.requiredPattern,\r\n        'years': (params) => params.message,\r\n        'countryCity': (params) => params.message,\r\n        'uniqueName': (params) => params.message,\r\n        'telephoneNumbers': (params) => params.message,\r\n        'telephoneNumber': (params) => params.message,\r\n        'invalidNumber': () => 'The specified information is invalid.',\r\n        'emptySpaces': () => 'The specified information is invalid.',\r\n        'email': () => 'Email is not valid',\r\n        'invalidPassword': () => 'Password must be a minimum of 8 characters and contain at least 1 uppercase character and 1 numeric value',\r\n        'invalidUsernameCharacters': () => 'invalid user name',\r\n        'invalidInputCharacters': () => 'The specified information is invalid.',\r\n        'invalidEmailAddress': () => 'Email is not valid',\r\n    };\r\n\r\n    @Input() private control: AbstractControlDirective | AbstractControl;\r\n\r\n    hasErrors(): boolean {\r\n        return this.control && this.control.errors && (this.control.dirty || this.control.touched);\r\n    }\r\n\r\n    listOfErrors() {\r\n        const errors = Object.keys(this.control.errors).map(field => this.getMessage(field, this.control.errors[field]));\r\n        return errors.length ? errors[0] : errors;\r\n    }\r\n\r\n    private getMessage(type: string, params: any) {\r\n        return GetErrorsComponent.errorMessages[type](params);\r\n    }\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { PlatformModule } from '@angular/cdk/platform';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nconst globalRippleConfig: RippleGlobalOptions = { disabled: true };\r\nimport {\r\n  MAT_RIPPLE_GLOBAL_OPTIONS,\r\n  RippleGlobalOptions,\r\n  MatRippleModule,\r\n  MatNativeDateModule,\r\n} from '@angular/material/core';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatFormFieldModule,\r\n    MatRippleModule,\r\n    MatDialogModule,\r\n    MatSortModule,\r\n    MatPaginatorModule,\r\n    CdkTableModule,\r\n    DragDropModule,\r\n    PortalModule,\r\n    CommonModule,\r\n    MatSelectModule,\r\n    MatCheckboxModule,\r\n    MatInputModule,\r\n    MatRadioModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatTabsModule,\r\n    MatButtonModule,\r\n    MatTableModule,\r\n    MatSlideToggleModule,\r\n    OverlayModule,\r\n    MatTooltipModule,\r\n    MatProgressBarModule,\r\n    MatMenuModule,\r\n    MatProgressSpinnerModule\r\n  ],\r\n  declarations: [],\r\n  entryComponents: [],\r\n  providers: [\r\n    { provide: MAT_RIPPLE_GLOBAL_OPTIONS, useValue: globalRippleConfig }\r\n  ],\r\n  exports: [\r\n    MatFormFieldModule,\r\n    PlatformModule,\r\n    MatRippleModule,\r\n    MatSortModule,\r\n    MatPaginatorModule,\r\n    CdkTableModule,\r\n    DragDropModule,\r\n    OverlayModule,\r\n    PortalModule,\r\n    MatSelectModule,\r\n    MatCheckboxModule,\r\n    MatInputModule,\r\n    MatRadioModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatTabsModule,\r\n    MatTableModule,\r\n    MatSlideToggleModule,\r\n    MatButtonModule,\r\n    MatTooltipModule,\r\n    MatProgressBarModule,\r\n    LayoutModule,\r\n    MatProgressSpinnerModule\r\n  ]\r\n})\r\nexport class AppMaterialModule { }\r\n","import { CanActivate, Router } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    private authService: AuthService,\r\n    protected router: Router\r\n  ) { }\r\n\r\n  canActivate() {\r\n    const isAuthenticated = this.authService.isAuthenticated();\r\n    if (!isAuthenticated) {\r\n      this.router.navigate(['login']);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { StorageService } from '../services/storage.service';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  public userSubject$ = new Subject();\r\n  public currentUserReq$;\r\n  public currentUserId;\r\n  public userSubject = new ReplaySubject<any>(1);\r\n  private userRequest: Observable<any>;\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  login(data): Observable<any> {\r\n    return this.http.post('Login', data);\r\n  }\r\n\r\n  signup(data): Observable<any> {\r\n    return this.http.post('SignUp', data);\r\n  }\r\n\r\n  logout(): void {\r\n    StorageService.clearLocalStorge();\r\n  }\r\n\r\n  getToken(): string {\r\n    return StorageService.getAuthToken()\r\n  }\r\n\r\n  isAuthenticated(): boolean {\r\n    return !!this.getToken();\r\n  }\r\n\r\n  islogin(): boolean {\r\n    return !!this.getToken();\r\n  }\r\n\r\n  resetUser() {\r\n    this.currentUserId = null;\r\n    this.userRequest = null;\r\n    this.userSubject = new ReplaySubject(1);\r\n  }\r\n\r\n  getUserId() {\r\n    const userdata = StorageService.getUserData();\r\n    return userdata._id;\r\n  }\r\n\r\n  isAuthUser(): Observable<any> {\r\n    return this.http.get<any>('users/current-user');\r\n  }\r\n}\r\n","\r\nexport function isEmptyObj(obj) {\r\n    for (var key in obj) {\r\n        if (obj.hasOwnProperty(key))\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function isEmptyArray(array) {\r\n    if (!Array.isArray(array) || !array.length) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function isEmail(email) {\r\n    const emailLowercase = email.toLowerCase();\r\n    if (email == null || emailLowercase.match(/^[\\w-]+(\\.[\\w-]+)*@([a-z0-9-]+(\\.[a-z0-9-]+)*?\\.[a-zA-Z]{2,6}|(\\d{1,3}\\.){3}\\d{1,3})(:\\d{4})?$/)) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function FindObjectByValue(inputArray: Array<any>, value: string) {\r\n    return inputArray.find(e => e == value);\r\n}\r\n\r\nexport function FindArrayObject(inputArray, key, value) {\r\n    return inputArray.find(e => e[key] == value);\r\n}\r\n\r\nexport function AutoUnsubscribe(constructor) {\r\n    const original = constructor.prototype.ngOnDestroy;\r\n    constructor.prototype.ngOnDestroy = function () {\r\n        for (const prop in this) {\r\n            if (prop) {\r\n                const property = this[prop];\r\n                if (property && (typeof property.unsubscribe === 'function')) {\r\n                    property.unsubscribe();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (original && typeof original === 'function') {\r\n            original.apply(this, arguments)\r\n        };\r\n    };\r\n\r\n}\r\nexport function isMobile() {\r\n    return window.innerWidth < 768\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable, of } from 'rxjs';\r\nimport { debounce, debounceTime, map } from 'rxjs/operators';\r\nimport { BaseService } from '../services/base.service';\r\n\r\n@Pipe({\r\n  name: 'filter'\r\n})\r\nexport class filterPipe implements PipeTransform {\r\n\r\n  constructor(\r\n    private toastr: ToastrService,\r\n    private svc: BaseService\r\n  ) {\r\n  }\r\n\r\n  transform(items: any[], value: string): Observable<any> {\r\n    if (!items) return of([]);\r\n    if (!value) return of(items);\r\n    const data = {\r\n      \"search_field\": \"full_name\",\r\n      \"search_value\": value,\r\n      \"condition\": \"contains\",\r\n    }\r\n    return this.svc.post('AllUsers', data).pipe(\r\n      debounceTime(500),\r\n      map(res => {\r\n        if (res.status == 400) {\r\n          this.toastr.error(\"No contacts found\", \"Opps!\");\r\n          return [];\r\n        }\r\n        return res.users;\r\n      })\r\n    )\r\n  }\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n@Pipe({\r\n    name: 'safeUrl'\r\n})\r\nexport class SafeUrlPipe implements PipeTransform {\r\n    constructor(private domSanitizer: DomSanitizer) { }\r\n    transform(url) {\r\n        return this.domSanitizer.bypassSecurityTrustResourceUrl(url);\r\n    }\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class BaseService {\r\n\r\n  constructor(\r\n    protected http: HttpClient\r\n  ) { }\r\n\r\n  public userData = new ReplaySubject<any>();\r\n  userData$ = this.userData.asObservable();\r\n\r\n  public isLoading = new Subject<any>();\r\n  isLoadingResponse = this.isLoading.asObservable();\r\n\r\n  /**\r\n  * This method is used to Call API using Http GET method.\r\n  * @param URL \r\n  * @return obserables responsce\r\n  * @author  Muhammad Mukhtiar  <muhammad.mukhtiar@norgic.com>\r\n  **/\r\n  get(URL): Observable<any> {\r\n    return this.http.get(URL);\r\n  }\r\n\r\n  /**\r\n  * This method is use to add or update data using API \r\n  * @param formData \r\n  * @return obserables responsce\r\n  * @author  Mukhtiar Hussain <muhammad.mukhtiar@norgic.com>\r\n  **/\r\n  save(URL, data = {}): Observable<any> {\r\n    return this.http.post(URL, data);\r\n  }\r\n\r\n  /**\r\n  * This method is used to Call API using Http Post method. \r\n  * @param URL \r\n  * @param URL \r\n  * @return obserables responsce\r\n  * @author  Mukhtiar Hussain <muhammad.mukhtiar@norgic.com>\r\n  **/\r\n  post(URL: string, payload: any = {}): Observable<any> {\r\n    return this.http.post(URL, payload);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpResponse, HttpInterceptor, HttpHandler, HttpRequest, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport { StorageService } from './storage.service';\r\nimport { environment } from '../../../environments/environment';\r\nimport { BaseService } from './base.service';\r\n\r\n@Injectable()\r\nexport class HttpService implements HttpInterceptor {\r\n    private baseUrl = environment.apiBaseUrl;\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private svc: BaseService\r\n    ) { }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        req = this.getModifiedReq(req);\r\n        return next.handle(req)\r\n            .pipe(\r\n                tap(event => {\r\n                    if (event instanceof HttpResponse) {\r\n                        if (event && event.body) {\r\n                            const serRes = event.body;\r\n                            this.svc.isLoading.next(false);\r\n                            if (serRes.code === 401) {\r\n                                StorageService.clearLocalStorge();\r\n                                this.showErrorMsg(serRes.message);\r\n                                this.router.navigate(['/login']);\r\n                            } else if (serRes.code === 407) {\r\n                                // StorageService.clearLocalStorge();\r\n                                this.showErrorMsg(serRes.message);\r\n                                // this.router.navigate(['/auth/login']);\r\n                            } else if (serRes.code === 200 || serRes.code === 201) {\r\n                            } else {\r\n                                this.showErrorMsg(serRes.message);\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                }),\r\n                catchError(errorRes => {\r\n                    this.svc.isLoading.next(false);\r\n                    console.log('this should print your error!', errorRes.error);\r\n                    if (errorRes instanceof HttpErrorResponse) {\r\n                        if (errorRes.status === 500) {\r\n                            // this.toastrService.danger('Opps!', \"Something went wrong\");\r\n                        } else {\r\n                            this.showErrorMsg(errorRes.message);\r\n                        }\r\n                    }\r\n                    return throwError(errorRes);\r\n                })\r\n            );\r\n    };\r\n\r\n    getModifiedReq(req: HttpRequest<any>): HttpRequest<any> {\r\n        req = req.clone({ url: this.baseUrl + req.url });\r\n        const formdata = JSON.stringify(req.body);\r\n        const auth_token = StorageService.getAuthToken();\r\n        if (auth_token) req = req.clone({ headers: req.headers.set('Authorization', 'Bearer ' + auth_token) });\r\n        req = req.clone({ headers: req.headers.set('Content-Type', 'application/json') });\r\n        req = req.clone({ body: formdata });\r\n        return req;\r\n    }\r\n\r\n    showErrorMsg(errorResponse) {\r\n        if (typeof errorResponse == 'string') {\r\n            // this.toastrService.danger('Opps!', errorResponse);\r\n        }\r\n\r\n    }\r\n}","import { Injectable, OnDestroy, Output } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { StorageService } from './storage.service';\r\ndeclare const MVDOTOK: any;\r\n\r\n@Injectable()\r\nexport class PubsubService implements OnDestroy {\r\n  @Output()\r\n  protected wsSubscription: Subscription;\r\n  public Client: any;\r\n\r\n  constructor() { }\r\n\r\n  public ngOnDestroy(): void {\r\n    this.wsSubscription.unsubscribe();\r\n  }\r\n\r\n  public initConfigure(): void {\r\n    let user = StorageService.getUserData();\r\n    this.Client = new MVDOTOK.Client({\r\n      projectID: \"125YLEY1\",\r\n      secret: \"3d9686b635b15b5bc2d19800407609fa\",\r\n      host: `${user.messaging_server_map.protocol}://${user.messaging_server_map.host}:${user.messaging_server_map.port}`\r\n    });\r\n    this.Client.Register(user.ref_id.toString(), user.authorization_token.toString());\r\n  }\r\n\r\n  public sendMessage(message): void {\r\n    this.Client.SendMessage(message);\r\n  }\r\n\r\n  public subscribeToChat(groups): void {\r\n    groups.map(chanelObj => {\r\n      this.Client.Subscribe(chanelObj);\r\n    });\r\n  }\r\n\r\n\r\n  public unsubscribeToChat(groups): void {\r\n    this.Client.UnSubscribe(groups);\r\n  }\r\n\r\n  public Disconnect(): void {\r\n    this.Client.Disconnect();\r\n  }\r\n\r\n  readMessage(chatMessages) {\r\n    chatMessages.map(chat => {\r\n      this.Client.SendReceipt(chat);\r\n    });\r\n  }\r\n\r\n  readSingleMessage(chatMessages) {\r\n    this.Client.SendReceipt(chatMessages);\r\n  }\r\n\r\n}\r\n","export class StorageService {\r\n\r\n  static readonly STORAGE_KEY_AUTH_TOKEN = 'auth_token';\r\n  static readonly STORAGE_KEY_USER_NAME = 'username';\r\n  static readonly STORAGE_KEY_USER_DATA = 'user_data';\r\n\r\n  static clearLocalStorge() {\r\n    localStorage.clear();\r\n    sessionStorage.clear();\r\n    return;\r\n  }\r\n\r\n  static getAuthToken() {\r\n    return localStorage.getItem(StorageService.STORAGE_KEY_AUTH_TOKEN);\r\n  }\r\n\r\n  static setAuthToken(token) {\r\n    localStorage.setItem(StorageService.STORAGE_KEY_AUTH_TOKEN, token);\r\n  }\r\n\r\n  static removeAuthToken() {\r\n    localStorage.removeItem(StorageService.STORAGE_KEY_AUTH_TOKEN);\r\n  }\r\n\r\n  static getAuthUsername() {\r\n    return localStorage.getItem(StorageService.STORAGE_KEY_USER_NAME);\r\n  }\r\n\r\n  static setAuthUsername(username) {\r\n    localStorage.setItem(StorageService.STORAGE_KEY_USER_NAME, username);\r\n  }\r\n\r\n  static removeAuthUsername() {\r\n    localStorage.removeItem(StorageService.STORAGE_KEY_USER_NAME);\r\n  }\r\n\r\n  static setUserData(userData) {\r\n    localStorage.setItem(StorageService.STORAGE_KEY_USER_DATA, JSON.stringify(userData));\r\n  }\r\n\r\n  static getUserData() {\r\n    return JSON.parse(localStorage.getItem(StorageService.STORAGE_KEY_USER_DATA));\r\n  }\r\n\r\n  static removeUserData() {\r\n    localStorage.removeItem(StorageService.STORAGE_KEY_USER_DATA);\r\n  }\r\n\r\n}\r\n","import { Injectable, Output } from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\n// declare var PUBSUB: any;\r\ndeclare const PUBSUB: any;\r\ndeclare const pubsub: any;\r\n\r\n@Injectable()\r\nexport class WebsocketService {\r\n  @Output() public ready: Subject<void> = new Subject();\r\n  public webSocket: WebSocket;\r\n  ws;\r\n  Client;\r\n\r\n  public initSocket(url: string): Observable<any> {\r\n    this.webSocket = new WebSocket('wss://' + 'vtest3.vdotok.com:8443' + '/call');\r\n    this.webSocket.onopen = () => this.ready.next();\r\n    return new Observable<any>(observer => {\r\n      this.webSocket.onmessage = (event: MessageEvent) => observer.next(event);\r\n      this.webSocket.onerror = (event: Event) => observer.error(event);\r\n      this.webSocket.onclose = (event: CloseEvent) => observer.complete();\r\n      // Callback invoked on unsubscribe\r\n      return () => this.webSocket.close();\r\n    });\r\n  }\r\n\r\n  public send(message: string): void {\r\n    // if (this.webSocket.readyState === WebSocket.OPEN) {\r\n    //   this.webSocket.send(message);\r\n    // }\r\n  }\r\n\r\n\r\n  public initPUBSUBSocket() {\r\n    return new PUBSUB.Client({\r\n      host: \"ws://emit1.togee.io\",\r\n      port: \"8080\",\r\n      credentials: {\r\n        username: \"john\",\r\n        password: \"\"\r\n      },\r\n      clientId: \"12345\",\r\n      reConnectivity: true,\r\n      secret: \"cWV91camkwd99XO9rvHmamvXxGdyeHK5\"\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { WebsocketService } from './services/websocket.service';\r\nimport { StorageService } from './services/storage.service';\r\nimport { AuthService } from './auth/auth.service';\r\nimport { AuthGuard } from './auth/auth-guard.service';\r\nimport { BaseService } from './services/base.service';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { HttpService } from './services/http.service';\r\nimport { PubsubService } from './services/pubsub.service';\r\nimport { GetErrorsComponent } from './FormsHandler/get-errors.component';\r\nimport { MAT_DIALOG_DEFAULT_OPTIONS } from '@angular/material/dialog';\r\nimport { filterPipe } from './pipe/filter';\r\nimport { SafeUrlPipe } from './pipe/safeurl';\r\n\r\nconst components = [\r\n  GetErrorsComponent,\r\n  filterPipe,\r\n  SafeUrlPipe\r\n]\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule,\r\n    CommonModule,\r\n  ],\r\n  declarations: [...components],\r\n  exports: [...components],\r\n  providers: [\r\n    StorageService,\r\n    AuthService,\r\n    AuthGuard,\r\n    BaseService,\r\n    PubsubService,\r\n    WebsocketService,\r\n    { provide: MAT_DIALOG_DEFAULT_OPTIONS, useValue: { hasBackdrop: false } },\r\n    { provide: HTTP_INTERCEPTORS, useClass: HttpService, multi: true },\r\n  ],\r\n})\r\nexport class SharedModule { }\r\n","\r\nimport { AbstractControl } from '@angular/forms';\r\n\r\n\r\n\r\nexport class ValidationService {\r\n\r\n    static specialCharValidator(control) {\r\n        if (control.value == null || control.value.match(/^[a-zA-Z0-9._]*$/)) {\r\n            return null;\r\n        } else {\r\n\r\n            return { 'invalidCharacters': true };\r\n        }\r\n    }\r\n\r\n    static uppercaseCharacterRule(amount: number): any {\r\n        return function validate(control): { [key: string]: any } {\r\n            const value: string = control.value;\r\n            if (value.length === 0) {\r\n                return undefined;\r\n            }\r\n            const pattern = /[^A-Z]+/g;\r\n            const stripped = value.replace(pattern, '');\r\n            if (stripped.length < amount) {\r\n                return { 'uppercaseCharacterRule': true };\r\n            }\r\n            return undefined;\r\n        };\r\n    }\r\n\r\n    static creditCardValidator(control) {\r\n        // Visa, MasterCard, American Express, Diners Club, Discover, JCB\r\n        if (control.value.match(/^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidCreditCard': true };\r\n        }\r\n    }\r\n\r\n    static emailValidator(control) {\r\n        // RFC 2822 compliant regex\r\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\r\n        const emailLowercase = control.value.toLowerCase();\r\n        if (control.value == null || emailLowercase.match(/^[\\w-]+(\\.[\\w-]+)*@([a-z0-9-]+(\\.[a-z0-9-]+)*?\\.[a-zA-Z]{2,6}|(\\d{1,3}\\.){3}\\d{1,3})(:\\d{4})?$/)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidEmailAddress': true };\r\n        }\r\n    }\r\n\r\n\r\n    static isEmptyInputValue(value: any): boolean {\r\n        // we don't check for string here so it also works with arrays\r\n        return value == null || value.length === 0;\r\n    }\r\n\r\n    static emptySpacesValidator(control) {\r\n        console.log('emptySpacesValidator', control, control.value);\r\n        if (control.value.match(/([^\\s])/)) {\r\n            return null;\r\n        } else {\r\n            return { 'emptySpaces': true };\r\n        }\r\n    }\r\n\r\n    static removeSpace(value: any): string {\r\n        return value.trim()\r\n    }\r\n\r\n    static englishWordsValidator(control) {\r\n        console.log('englishWordsValidator', control);\r\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\r\n        const tempstring = ValidationService.removeSpace(control.value);\r\n        if (tempstring.match(/^[a-zA-Z]+( [\\&a-zA-Z]+)*$/)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidCharacters': true };\r\n        }\r\n    }\r\n\r\n    static nameValidator(control) {\r\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\r\n        if (control.value.match(/^(?:[a-zA-Z0-9\\s@,=%$#&_\\u0600-\\u06FF\\u0750-\\u077F\\u08A0-\\u08FF\\uFB50-\\uFDCF\\uFDF0-\\uFDFF\\uFE70-\\uFEFF]|(?:\\uD802[\\uDE60-\\uDE9F]|\\uD83B[\\uDE00-\\uDEFF])){0,30}$/)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidNameCharacters': true };\r\n        }\r\n    }\r\n\r\n\r\n    static whiteSpaceValidator(control) {\r\n        // RFC 2822 compliant regex\r\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\r\n\r\n        if (control.value.match(/^[-a-zA-Z\\u0600-\\u06FF0-9-()]+(\\s+[-a-zA-Z\\u0600-\\u06FF0-9-()]+)*$/)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidWhiteSpace': true };\r\n        }\r\n    }\r\n\r\n\r\n    static phoneValidator(control) {\r\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\r\n        if (control.value.match(/^\\+?[0-9]+$/g)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidPhone': true };\r\n        }\r\n    }\r\n\r\n    static phoneUsernameEmailValidator(control) {\r\n        if (control.value == null) return;\r\n        let validEmail = true, validPhone = true, validUsername = true;\r\n        if (ValidationService.emailValidator(control) != null) {\r\n            validEmail = false;\r\n        }\r\n        if (!control.value.match(/^[a-zA-Z0-9]{5,17}$/)) {\r\n            validUsername = false;\r\n        }\r\n        if (!control.value.match(/^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/)) {\r\n            validPhone = false;\r\n        }\r\n        console.log('phoneUsernameEmailValidator', ValidationService.emailValidator(control), validEmail, validUsername, validPhone)\r\n        if (validEmail || validUsername || validPhone) return null;\r\n        return { 'invalidUsernameEmail': true };\r\n    }\r\n\r\n    static usernameValidator(control) {\r\n        // RFC 2822 compliant regex\r\n        if (control.value == null || control.value.match(/^[a-zA-Z0-9]+$/)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidUsernameCharacters': true };\r\n        }\r\n    }\r\n\r\n    static passwordValidator(control) {\r\n        // {8,100}           - Assert password is between 8 and 100 characters\r\n        // (?=.*[0-9])       - Assert a string has at least one number\r\n        if (control.value && !ValidationService.uppercaseCharacterRule(1)(control) && control.value.match(/^(?=.*[0-9])[a-zA-Z0-9!@#$%^&*]{6,100}$/)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidPassword': true };\r\n        }\r\n    }\r\n\r\n    static MatchPassword(control: AbstractControl, crud) {\r\n        if (control.value == null) return null;\r\n        return control.root.get('password').value != control.value ? { passworMismatch: true } : null;\r\n    }\r\n\r\n\r\n    static pinCodeValidator(control) {\r\n        if (control.value && control.value.match(/^[0-9]{4}$/)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidPinCode': true };\r\n        }\r\n    }\r\n\r\n\r\n    static trimData(data) {\r\n        if (data) {\r\n            for (const key in data) {\r\n                if (data[key] && typeof data[key] == \"string\") {\r\n                    data[key] = data[key].trim();\r\n                }\r\n            }\r\n            return data;\r\n        }\r\n    }\r\n\r\n\r\n    static checkInteger(control) {\r\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\r\n        if (parseFloat(control.value) == 0 || (parseFloat(control.value) || parseInt(control.value)) && !isNaN(control.value)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidNumber': true };\r\n        }\r\n    }\r\n\r\n\r\n    static alphnumericValidator(control) {\r\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\r\n        if (ValidationService.whiteSpaceValidator(control.value)) return;\r\n        // if (control.value.match(/^[^±!@£$%^&*_+§¡€#¢§¶•ªº«\\\\/<>?:;|=.,0-9]{1,500}$/)) {\r\n        if (control.value.match(/^[a-zA-Z0-9-,]+(\\s{0,1}[a-zA-Z-, ])*$/)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidInputCharacters': true };\r\n        }\r\n    }\r\n\r\n\r\n    static stringvalidator(control) {\r\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\r\n        if (control.value.match(/^[a-zA-Z0-9-,]+(\\s{0,1}[a-zA-Z-, ])*$/)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidInputCharacters': true };\r\n        }\r\n    }\r\n\r\n    static disallowspecial(control) {\r\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\r\n        if (control.value.match(/^[A-Za-z0-9 ]+$/)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidInputCharacters': true };\r\n        }\r\n    }\r\n\r\n\r\n\r\n    static alphValidator(control) {\r\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\r\n        if (control.value.match(/^\\+?[A-Za-z]+$/g)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidString': true };\r\n        }\r\n    }\r\n\r\n    static numericValidator(control) {\r\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\r\n        if (ValidationService.whiteSpaceValidator(control.value)) return;\r\n        const value = control.value.toString()\r\n        if (value.match(/^\\+?[0-9]+$/g)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidNumeric': true };\r\n        }\r\n    }\r\n\r\n    static floatNumberValidator(control) {\r\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\r\n        const value = control.value.toString()\r\n        if (value.match(/^[+-]?\\d+(\\.\\d+)?$/g)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidNumeric': true };\r\n        }\r\n    }\r\n\r\n\r\n    static mackAddressValidator(control) {\r\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\r\n        const value = control.value.toString()\r\n        if (value.match(/^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$/g)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidMackAddress': true };\r\n        }\r\n    }\r\n\r\n\r\n    static gatewayAddressValidator(control) {\r\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\r\n        const value = control.value.toString()\r\n        if (value.match(/^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$/g)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidMackAddress': true };\r\n        }\r\n    }\r\n\r\n\r\n    static ipValidator(control) {\r\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\r\n        const value = control.value.toString()\r\n        if (value.match(/^(\\d|[1-9]\\d|1\\d\\d|2([0-4]\\d|5[0-5]))\\.(\\d|[1-9]\\d|1\\d\\d|2([0-4]\\d|5[0-5]))\\.(\\d|[1-9]\\d|1\\d\\d|2([0-4]\\d|5[0-5]))\\.(\\d|[1-9]\\d|1\\d\\d|2([0-4]\\d|5[0-5]))$/g)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidIp': true };\r\n        }\r\n    }\r\n\r\n\r\n    static domainNameValidator(control) {\r\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\r\n        const value = control.value.toString()\r\n        if (value.match(/^(?=^.{1,254}$)(^(?:(?!\\d+\\.)[a-zA-Z0-9_\\-]{1,63}\\.?)+(?:[a-zA-Z]{2,})$)/g)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidDomainName': true };\r\n        }\r\n    }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiBaseUrl : 'https://stenant.vdotok.dev/API/v0/'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}